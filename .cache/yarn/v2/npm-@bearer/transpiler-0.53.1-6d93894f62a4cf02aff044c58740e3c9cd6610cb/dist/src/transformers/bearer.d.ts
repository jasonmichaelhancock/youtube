import * as ts from 'typescript';
export declare function addBearerIdProp(classNode: ts.ClassDeclaration): ts.ClassDeclaration;
export declare function addBearerScenarioIdAccessor(classNode: ts.ClassDeclaration, scenarioId: string): ts.ClassDeclaration;
declare function addBearerContextProp(classNode: ts.ClassDeclaration): ts.ClassDeclaration;
export declare function addSetupIdProp(classNode: ts.ClassDeclaration): ts.ClassDeclaration;
export declare function addComponentDidLoad(classNode: ts.ClassDeclaration): ts.ClassDeclaration;
export declare function hasImport(node: ts.SourceFile, libName: string): boolean;
declare function coreImport(node: ts.ImportDeclaration): boolean;
export declare function ensureBearerContextInjected(classNode: ts.ClassDeclaration): ts.ClassDeclaration;
export declare function ensureWatchImported(tsSourceFile: ts.SourceFile): ts.SourceFile;
export declare function ensurePropImported(tsSourceFile: ts.SourceFile): ts.SourceFile;
export declare function ensureComponentImported(tsSourceFile: ts.SourceFile): ts.SourceFile;
export declare function ensureRootComponentNotImported(tsSourceFile: ts.SourceFile): ts.SourceFile;
export declare function ensureStateImported(tsSourceFile: ts.SourceFile): ts.SourceFile;
export declare function ensureElementImported(tsSourceFile: ts.SourceFile): ts.SourceFile;
export declare function propDecorator(): ts.Decorator;
export declare function elementDecorator(): ts.Decorator;
declare const _default: {
    addBearerScenarioIdAccessor: typeof addBearerScenarioIdAccessor;
    addBearerIdProp: typeof addBearerIdProp;
    addBearerContextProp: typeof addBearerContextProp;
    addSetupIdProp: typeof addSetupIdProp;
    addComponentDidLoad: typeof addComponentDidLoad;
    hasImport: typeof hasImport;
    coreImport: typeof coreImport;
    ensureBearerContextInjected: typeof ensureBearerContextInjected;
    ensurePropImported: typeof ensurePropImported;
};
export default _default;
