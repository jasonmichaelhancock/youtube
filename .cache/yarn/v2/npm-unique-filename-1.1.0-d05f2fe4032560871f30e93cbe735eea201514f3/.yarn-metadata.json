{
  "manifest": {
    "name": "unique-filename",
    "version": "1.1.0",
    "description": "Generate a unique filename for use in temporary directories or caches.",
    "main": "index.js",
    "scripts": {
      "test": "standard && tap test"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/iarna/unique-filename.git"
    },
    "keywords": [],
    "author": {
      "name": "Rebecca Turner",
      "email": "me@re-becca.org",
      "url": "http://re-becca.org/"
    },
    "license": "ISC",
    "bugs": {
      "url": "https://github.com/iarna/unique-filename/issues"
    },
    "homepage": "https://github.com/iarna/unique-filename",
    "devDependencies": {
      "standard": "^5.4.1",
      "tap": "^2.3.1"
    },
    "dependencies": {
      "unique-slug": "^2.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/vagrant/.cache/yarn/v2/npm-unique-filename-1.1.0-d05f2fe4032560871f30e93cbe735eea201514f3/package.json",
    "readmeFilename": "README.md",
    "readme": "unique-filename\n===============\n\nGenerate a unique filename for use in temporary directories or caches.\n\n```\nvar uniqueFilename = require('unique-filename')\n\n// returns something like: /tmp/912ec803b2ce49e4a541068d495ab570\nvar randomTmpfile = uniqueFilename(os.tmpdir())\n\n// returns something like: /tmp/my-test-912ec803b2ce49e4a541068d495ab570\nvar randomPrefixedTmpfile = uniqueFilename(os.tmpdir(), 'my-test')\n\nvar uniqueTmpfile = uniqueFilename('/tmp', 'testing', '/my/thing/to/uniq/on')\n```\n\n### uniqueFilename(*dir*, *fileprefix*, *uniqstr*) → String\n\nReturns the full path of a unique filename that looks like:\n`dir/prefix-7ddd44c0`\nor `dir/7ddd44c0`\n\n*dir* – The path you want the filename in. `os.tmpdir()` is a good choice for this.\n\n*fileprefix* – A string to append prior to the unique part of the filename.\nThe parameter is required if *uniqstr* is also passed in but is otherwise\noptional and can be `undefined`/`null`/`''`. If present and not empty\nthen this string plus a hyphen are prepended to the unique part.\n\n*uniqstr* – Optional, if not passed the unique part of the resulting\nfilename will be random.  If passed in it will be generated from this string\nin a reproducable way.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/unique-filename/-/unique-filename-1.1.0.tgz#d05f2fe4032560871f30e93cbe735eea201514f3",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/unique-filename/-/unique-filename-1.1.0.tgz",
    "hash": "d05f2fe4032560871f30e93cbe735eea201514f3",
    "registry": "npm",
    "packageName": "unique-filename"
  },
  "registry": "npm",
  "hash": "d05f2fe4032560871f30e93cbe735eea201514f3"
}