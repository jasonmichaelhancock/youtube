{
  "manifest": {
    "name": "match-stream",
    "version": "0.0.2",
    "description": "Match a pattern within a stream",
    "main": "match.js",
    "dependencies": {
      "buffers": "~0.1.1",
      "readable-stream": "~1.0.0"
    },
    "devDependencies": {
      "tap": "~0.4.0",
      "stream-buffers": "~0.2.4"
    },
    "scripts": {
      "test": "./node_modules/.bin/tap ./test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/EvanOxfeld/match-stream.git"
    },
    "keywords": [
      "match",
      "stream",
      "split"
    ],
    "author": {
      "name": "Evan Oxfeld",
      "email": "eoxfeld@gmail.com"
    },
    "license": "MIT",
    "readmeFilename": "README.md",
    "gitHead": "665dabbb0a3593310012eb041fc07395db632a20",
    "_registry": "npm",
    "_loc": "/home/vagrant/.cache/yarn/v2/npm-match-stream-0.0.2-99eb050093b34dffade421b9ac0b410a9cfa17cf/package.json",
    "readme": "match-stream [![Build Status](https://travis-ci.org/EvanOxfeld/match-stream.png)](https://travis-ci.org/EvanOxfeld/match-stream)\n============\n\nSupply a function to handle pattern matches within a NodeJS stream.\n\n## Installation\n\n```bash\n$ npm install match-stream\n```\n\n## Quick Examples\n\n### End stream on match\n\n```javascript\nvar MatchStream = require('match-stream');\nvar streamBuffers = require(\"stream-buffers\");\n\nvar ms = new MatchStream({ pattern: 'World'}, function (buf, matched, extra) {\n  if (!matched) {\n    return this.push(buf);\n  }\n  this.push(buf);\n  return this.push(null); //signal end of data\n});\n\nvar sourceStream = new streamBuffers.ReadableStreamBuffer();\nsourceStream.put(\"Hello World\");\nvar writableStream = new streamBuffers.WritableStreamBuffer();\n\nsourceStream\n  .pipe(ms)\n  .pipe(writableStream)\n  .once('close', function () {\n    var str = writableStream.getContentsAsString('utf8');\n    console.log('Piped data before pattern occurs:', \"'\" + str + \"'\");\n    sourceStream.destroy();\n  });\n\n//Output\n//Piped data before pattern occurs: 'Hello '\n```\n\n### Split stream\n\n```javascript\nvar MatchStream = require('match-stream');\nvar fs = require('fs');\n\nvar line = \"\";\nvar loremLines = [];\nvar ms = new MatchStream({ pattern: '.', consume: true}, function (buf, matched, extra) {\n  line += buf.toString();\n  if (matched) {\n    loremLines.push(line.trim());\n    line = \"\";\n  }\n});\n\nfs.createReadStream('lorem.txt')\n  .pipe(ms)\n  .once('finish', function() {\n    console.log(loremLines);\n  });\n```\n\n## License\n\nMIT\n\n## Acknowledgements\n\nSpecial thanks to @wanderview for assisting with the API.\n\n",
    "licenseText": "Copyright (c) 2013 Evan Oxfeld\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/match-stream/-/match-stream-0.0.2.tgz#99eb050093b34dffade421b9ac0b410a9cfa17cf",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/match-stream/-/match-stream-0.0.2.tgz",
    "hash": "99eb050093b34dffade421b9ac0b410a9cfa17cf",
    "registry": "npm",
    "packageName": "match-stream"
  },
  "registry": "npm",
  "hash": "99eb050093b34dffade421b9ac0b410a9cfa17cf"
}