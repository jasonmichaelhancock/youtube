{
  "manifest": {
    "name": "knex",
    "version": "0.15.2",
    "description": "A batteries-included SQL query & schema builder for Postgres, MySQL and SQLite3 and the Browser",
    "main": "knex.js",
    "engines": {
      "node": ">=6"
    },
    "dependencies": {
      "babel-runtime": "^6.26.0",
      "bluebird": "^3.5.1",
      "chalk": "2.3.2",
      "commander": "^2.16.0",
      "debug": "3.1.0",
      "inherits": "~2.0.3",
      "interpret": "^1.1.0",
      "liftoff": "2.5.0",
      "lodash": "^4.17.10",
      "minimist": "1.2.0",
      "mkdirp": "^0.5.1",
      "pg-connection-string": "2.0.0",
      "tarn": "^1.1.4",
      "tildify": "1.2.0",
      "uuid": "^3.3.2",
      "v8flags": "^3.1.1"
    },
    "lint-staged": {
      "*.{js,json}": [
        "prettier --write",
        "git add"
      ]
    },
    "devDependencies": {
      "JSONStream": "^1.3.3",
      "async": "^2.6.1",
      "babel-cli": "^6.26.0",
      "babel-eslint": "^8.2.5",
      "babel-plugin-add-module-exports": "^0.2.1",
      "babel-plugin-transform-runtime": "^6.23.0",
      "babel-preset-env": "^1.7.0",
      "chai": "^4.1.2",
      "coveralls": "^3.0.2",
      "eslint": "5.0.1",
      "eslint-config-prettier": "^2.9.0",
      "eslint-plugin-import": "^2.13.0",
      "husky": "^0.14.3",
      "json-loader": "^0.5.7",
      "lint-staged": "^7.2.0",
      "mocha": "^5.2.0",
      "mock-fs": "^4.5.0",
      "mssql": "^4.1.0",
      "mysql": "^2.15.0",
      "mysql2": "^1.5.3",
      "nyc": "^12.0.2",
      "pg": "^7.4.3",
      "pg-query-stream": "^1.1.1",
      "prettier": "^1.13.7",
      "rimraf": "^2.6.2",
      "sinon": "^6.1.0",
      "sinon-chai": "^3.2.0",
      "source-map-support": "^0.5.6",
      "sqlite3": "^4.0.1",
      "tap-spec": "^4.1.1",
      "tape": "^4.9.1",
      "through": "^2.3.8",
      "toxiproxy-node-client": "^2.0.6"
    },
    "buildDependencies": [
      "babel-cli",
      "babel-plugin-add-module-exports",
      "babel-plugin-lodash",
      "babel-plugin-transform-runtime",
      "babel-preset-es2015",
      "babel-preset-es2015-loose",
      "rimraf"
    ],
    "scripts": {
      "precommit": "lint-staged",
      "format": "prettier --write \"{src,bin,scripts,test}/**/*.js\"",
      "build": "npm run babel",
      "debug_test": "node --inspect-brk ./node_modules/.bin/_mocha -- --exit -t 0 test/index.js",
      "babel": "rimraf ./lib && babel src --out-dir lib --copy-files",
      "coveralls": "nyc report --reporter=text-lcov | coveralls",
      "dev": "rimraf ./lib && babel -w src --out-dir lib --copy-files",
      "lint": "eslint src/**",
      "plaintest": "mocha --exit -t 10000 -b -R spec test/index.js && npm run tape",
      "prepublish": "npm run babel",
      "pre_test": "npm run lint",
      "tape": "node test/tape/index.js | tap-spec",
      "debug_tape": "node --inspect-brk test/tape/index.js",
      "test": "npm run pre_test && nyc mocha --exit --check-leaks -t 10000 -R spec test/index.js && npm run tape",
      "oracledb:test": "docker rmi -f --no-prune knex-test-oracledb && docker build -f scripts/oracle-tests-Dockerfile --tag knex-test-oracledb . && docker run --rm -i -t -e KNEX_TEST_TIMEOUT=$KNEX_TEST_TIMEOUT -e NODE_VER=$NODE_VER knex-test-oracledb",
      "mssql:init": "docker-compose -f scripts/mssql-docker-compose.yml up --no-start && docker-compose -f scripts/mssql-docker-compose.yml start",
      "postmssql:init": "node scripts/wait-for-mssql-server.js && npm run mssql:logs || (npm run mssql:logs;false)",
      "mssql:logs": "docker-compose -f scripts/mssql-docker-compose.yml logs",
      "mssql:test": "DB=mssql npm test",
      "mssql:destroy": "docker-compose -f scripts/mssql-docker-compose.yml stop",
      "stress:init": "docker-compose -f scripts/stress-test/docker-compose.yml up --no-start && docker-compose -f scripts/stress-test/docker-compose.yml start",
      "stress:test": "node scripts/stress-test/knex-stress-test.js |  grep -A 5 -B 60 -- '- STATS '",
      "stress:destroy": "docker-compose -f scripts/stress-test/docker-compose.yml stop"
    },
    "bin": {
      "knex": "./bin/cli.js"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/tgriesser/knex.git"
    },
    "homepage": "https://knexjs.org/",
    "keywords": [
      "sql",
      "query",
      "postgresql",
      "mysql",
      "sqlite3",
      "oracle",
      "mssql"
    ],
    "author": {
      "name": "Tim Griesser",
      "url": "https://github.com/tgriesser"
    },
    "browser": {
      "./lib/migrate/index.js": "./lib/util/noop.js",
      "./lib/bin/cli.js": "./lib/util/noop.js",
      "./lib/seed/index.js": "./lib/util/noop.js",
      "mssql": false,
      "mssql/lib/base": false,
      "tedious": false,
      "mysql": false,
      "mysql2": false,
      "pg": false,
      "pg-query-stream": false,
      "oracle": false,
      "sqlite3": false,
      "oracledb": false
    },
    "react-native": {
      "./lib/migrate": "./lib/util/noop.js",
      "./lib/seed": "./lib/util/noop.js"
    },
    "files": [
      "CONTRIBUTING.md",
      "README.md",
      "bin/*",
      "src/*",
      "lib/*",
      "knex.js",
      "LICENSE",
      "CHANGELOG.md",
      "scripts/*"
    ],
    "license": "MIT",
    "tonicExampleFilename": "scripts/runkit-example.js",
    "nyc": {
      "check-coverage": true,
      "lines": 85,
      "statements": 83,
      "functions": 83,
      "branches": 72
    },
    "_registry": "npm",
    "_loc": "/home/vagrant/.cache/yarn/v2/npm-knex-0.15.2-6059b87489605f4cc87599a6d2a9d265709e9340/package.json",
    "readmeFilename": "README.md",
    "readme": "# [knex.js](http://knexjs.org)\n\n[![npm version](http://img.shields.io/npm/v/knex.svg)](https://npmjs.org/package/knex)\n[![Build Status](https://travis-ci.org/tgriesser/knex.svg?branch=master)](https://travis-ci.org/tgriesser/knex)\n[![Coverage Status](https://coveralls.io/repos/tgriesser/knex/badge.svg?branch=master)](https://coveralls.io/r/tgriesser/knex?branch=master)\n[![Dependencies Status](https://david-dm.org/tgriesser/knex.svg)](https://david-dm.org/tgriesser/knex)\n[![Gitter chat](https://badges.gitter.im/tgriesser/knex.svg)](https://gitter.im/tgriesser/knex)\n\n> **A SQL query builder that is _flexible_, _portable_, and _fun_ to use!**\n\nA batteries-included, multi-dialect (MSSQL, MySQL, PostgreSQL, SQLite3, Oracle(including Oracle Wallet Authentication)) query builder for\nNode.js and the Browser, featuring:\n\n- [transactions](http://knexjs.org/#Transactions)\n- [connection pooling](http://knexjs.org/#Installation-pooling)\n- [streaming queries](http://knexjs.org/#Interfaces-Streams)\n- both a [promise](http://knexjs.org/#Interfaces-Promises) and [callback](http://knexjs.org/#Interfaces-Callbacks) API\n- a [thorough test suite](https://travis-ci.org/tgriesser/knex)\n- the ability to [run in the Browser](http://knexjs.org/#Installation-browser)\n\nNode.js versions 6+ are supported.\n\n[Read the full documentation to get started!](http://knexjs.org)\n\nFor support and questions, join the `#bookshelf` channel on freenode IRC\n\nFor an Object Relational Mapper, see:\n- http://bookshelfjs.org\n- https://github.com/Vincit/objection.js\n\nTo see the SQL that Knex will generate for a given query, see: [Knex Query Lab](http://michaelavila.com/knex-querylab/)\n\n## Examples\n\nWe have several examples [on the website](http://knexjs.org). Here is the first one to get you started:\n\n```js\nvar knex = require('knex')({\n  dialect: 'sqlite3',\n  connection: {\n    filename: './data.db'\n  }\n});\n\n// Create a table\nknex.schema.createTable('users', function(table) {\n  table.increments('id');\n  table.string('user_name');\n})\n\n// ...and another\n.createTable('accounts', function(table) {\n  table.increments('id');\n  table.string('account_name');\n  table.integer('user_id').unsigned().references('users.id');\n})\n\n// Then query the table...\n.then(function() {\n  return knex.insert({user_name: 'Tim'}).into('users');\n})\n\n// ...and using the insert id, insert into the other table.\n.then(function(rows) {\n  return knex.table('accounts').insert({account_name: 'knex', user_id: rows[0]});\n})\n\n// Query both of the rows.\n.then(function() {\n  return knex('users')\n    .join('accounts', 'users.id', 'accounts.user_id')\n    .select('users.user_name as user', 'accounts.account_name as account');\n})\n\n// .map over the results\n.map(function(row) {\n  console.log(row);\n})\n\n// Finally, add a .catch handler for the promise chain\n.catch(function(e) {\n  console.error(e);\n});\n```\n",
    "licenseText": "Copyright (c) 2013-present Tim Griesser\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/knex/-/knex-0.15.2.tgz#6059b87489605f4cc87599a6d2a9d265709e9340",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/knex/-/knex-0.15.2.tgz",
    "hash": "6059b87489605f4cc87599a6d2a9d265709e9340",
    "registry": "npm",
    "packageName": "knex"
  },
  "registry": "npm",
  "hash": "6059b87489605f4cc87599a6d2a9d265709e9340"
}